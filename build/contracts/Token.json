{
  "contractName": "Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersReturningFalse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.3+commit.10d17f24\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersReturningFalse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/tokens/Token.sol\":\"Token\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/oz/ERC20.sol\":{\"keccak256\":\"0x4d935cde28a02d3e187533c621663a41fcce26f57bec83d5e69b5a2a3ae7544d\",\"urls\":[\"bzzr://81ee219f80458be778c91c914b5afa44a39671cfac5cf02bf046157c756eb5f1\"]},\"/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/oz/IERC20.sol\":{\"keccak256\":\"0x7b907219f231d636a3340b490f6986ca107235b6a0f57d3e21e884cef57711ce\",\"urls\":[\"bzzr://7835dc91039e37652f6064ba3913660d56c811bf65eebf1d7150b278d557ba34\"]},\"/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/oz/SafeMath.sol\":{\"keccak256\":\"0xcd7cf8e2eba8fb53c3d88274c02cdd041c682f8a5f96ad7441724fb017830291\",\"urls\":[\"bzzr://c1b3addd8d8b38ce7fab68056e040b142461b41769b1453bde5126dd0543a75e\"]},\"/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/tokens/Token.sol\":{\"keccak256\":\"0x16f57652aca2a986303bf5fef9909824248a01abaad3f1fa8247ae3e424dab9c\",\"urls\":[\"bzzr://6552a20ad82028ffc91f91dd7feec74edc61f0b5f004242edb1a2b10ca344ac8\"]}},\"version\":1}",
  "bytecode": "0x60806040526003805461ff001960ff1990911660011716905534801561002457600080fd5b5060405160208061082b8339810180604052602081101561004457600080fd5b5051610057338261005d602090811b901c565b5061012a565b600160a060020a038216151561007257600080fd5b61008b8160025461011160201b6106a71790919060201c565b600255600160a060020a038216600090815260208181526040909120546100bb9183906106a7610111821b17901c565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561012357600080fd5b9392505050565b6106f2806101396000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a457c2d711610076578063b43c36ec1161005b578063b43c36ec1461024b578063d34a21611461026c578063dd62ed3e1461028b576100be565b8063a457c2d7146101d9578063a9059cbb14610212576100be565b806323b872dd116100a757806323b872dd1461012a578063395093511461016d57806370a08231146101a6576100be565b8063095ea7b3146100c357806318160ddd14610110575b600080fd5b6100fc600480360360408110156100d957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102c6565b604080519115158252519081900360200190f35b6101186102dd565b60408051918252519081900360200190f35b6100fc6004803603606081101561014057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356102e3565b6100fc6004803603604081101561018357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610347565b610118600480360360208110156101bc57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610390565b6100fc600480360360408110156101ef57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103b8565b6100fc6004803603604081101561022857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610401565b61026a6004803603602081101561026157600080fd5b5035151561043e565b005b61026a6004803603602081101561028257600080fd5b50351515610475565b610118600480360360408110156102a157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166104a6565b60006102d33384846104de565b5060015b92915050565b60025490565b60006102f0848484610591565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461033d918691610338908663ffffffff61069216565b6104de565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d3918590610338908663ffffffff6106a716565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d3918590610338908663ffffffff61069216565b600354600090610100900460ff161561041c575060006102d7565b60035460ff16151561042d57600080fd5b61043783836106b9565b9392505050565b60038054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff8216151561050057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561052257600080fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff821615156105b357600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546105e9908263ffffffff61069216565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461062b908263ffffffff6106a716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156106a157600080fd5b50900390565b60008282018381101561043757600080fd5b60006102d333848461059156fea165627a7a72305820c9a42cfbee6333c5081aecca9c6a97afec41e5243b61e7ddb250c6ee2bec98740029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a457c2d711610076578063b43c36ec1161005b578063b43c36ec1461024b578063d34a21611461026c578063dd62ed3e1461028b576100be565b8063a457c2d7146101d9578063a9059cbb14610212576100be565b806323b872dd116100a757806323b872dd1461012a578063395093511461016d57806370a08231146101a6576100be565b8063095ea7b3146100c357806318160ddd14610110575b600080fd5b6100fc600480360360408110156100d957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102c6565b604080519115158252519081900360200190f35b6101186102dd565b60408051918252519081900360200190f35b6100fc6004803603606081101561014057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356102e3565b6100fc6004803603604081101561018357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610347565b610118600480360360208110156101bc57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610390565b6100fc600480360360408110156101ef57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103b8565b6100fc6004803603604081101561022857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610401565b61026a6004803603602081101561026157600080fd5b5035151561043e565b005b61026a6004803603602081101561028257600080fd5b50351515610475565b610118600480360360408110156102a157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166104a6565b60006102d33384846104de565b5060015b92915050565b60025490565b60006102f0848484610591565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461033d918691610338908663ffffffff61069216565b6104de565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d3918590610338908663ffffffff6106a716565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102d3918590610338908663ffffffff61069216565b600354600090610100900460ff161561041c575060006102d7565b60035460ff16151561042d57600080fd5b61043783836106b9565b9392505050565b60038054911515610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909216919091179055565b600380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff8216151561050057600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561052257600080fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff821615156105b357600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546105e9908263ffffffff61069216565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461062b908263ffffffff6106a716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828211156106a157600080fd5b50900390565b60008282018381101561043757600080fd5b60006102d333848461059156fea165627a7a72305820c9a42cfbee6333c5081aecca9c6a97afec41e5243b61e7ddb250c6ee2bec98740029",
  "sourceMap": "52:640:9:-;;;82:28;;;-1:-1:-1;;;;82:28:9;;;106:4;82:28;116:36;;;159:77;5:2:-1;;;;30:1;27;20:12;5:2;159:77:9;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;159:77:9;204:25;210:10;159:77;204:5;159:77;204:5;;;:25;;:::i;:::-;159:77;52:640;;5807:263:3;-1:-1:-1;;;;;5881:21:3;;;;5873:30;;;;;;5929:23;5946:5;5929:12;;:16;;;;;;:23;;;;:::i;:::-;5914:12;:38;-1:-1:-1;;;;;5983:18:3;;:9;:18;;;;;;;;;;;;:29;;6006:5;;5983:22;;;;;:29;;:::i;:::-;-1:-1:-1;;;;;5962:18:3;;:9;:18;;;;;;;;;;;:50;;;;6027:36;;;;;;;5962:18;;:9;;6027:36;;;;;;;;;;5807:263;;:::o;560:145:6:-;618:7;649:5;;;672:6;;;;664:15;;;;;;697:1;560:145;-1:-1:-1;;;560:145:6:o;52:640:9:-;;;;;;;",
  "deployedSourceMap": "52:640:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:640:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:145:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2736:145:3;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;929:89;;;:::i;:::-;;;;;;;;;;;;;;;;3344:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3344:224:3;;;;;;;;;;;;;;;;;;:::i;4071:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4071:200:3;;;;;;;;;:::i;1231:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:3;;;;:::i;4779:210::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4779:210:3;;;;;;;;;:::i;464:226:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;464:226:9;;;;;;;;;:::i;346:112::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;346:112:9;;;;:::i;:::-;;242:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;242:98:9;;;;:::i;1666:129:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1666:129:3;;;;;;;;;;;:::i;2736:145::-;2801:4;2817:36;2826:10;2838:7;2847:5;2817:8;:36::i;:::-;-1:-1:-1;2870:4:3;2736:145;;;;;:::o;929:89::-;999:12;;929:89;:::o;3344:224::-;3423:4;3439:26;3449:4;3455:2;3459:5;3439:9;:26::i;:::-;3502:14;;;;;;;:8;:14;;;;;;;;3490:10;3502:26;;;;;;;;;3475:65;;3484:4;;3502:37;;3533:5;3502:37;:30;:37;:::i;:::-;3475:8;:65::i;:::-;-1:-1:-1;3557:4:3;3344:224;;;;;:::o;4071:200::-;4176:10;4151:4;4197:20;;;:8;:20;;;;;;;;;:29;;;;;;;;;;4151:4;;4167:76;;4188:7;;4197:45;;4231:10;4197:45;:33;:45;:::i;1231:104::-;1312:16;;1286:7;1312:16;;;;;;;;;;;;1231:104::o;4779:210::-;4889:10;4864:4;4910:20;;;:8;:20;;;;;;;;;:29;;;;;;;;;;4864:4;;4880:81;;4901:7;;4910:50;;4944:15;4910:50;:33;:50;:::i;464:226:9:-;545:23;;525:4;;545:23;;;;;541:66;;;-1:-1:-1;591:5:9;584:12;;541:66;624:16;;;;616:25;;;;;;;;658;673:2;677:5;658:14;:25::i;:::-;651:32;464:226;-1:-1:-1;;;464:226:9:o;346:112::-;418:23;:33;;;;;;;;;;;;;;;;;346:112::o;242:98::-;307:16;:26;;;;;;;;;;;;;242:98::o;1666:129:3:-;1764:15;;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;6824:248::-;6916:21;;;;;6908:30;;;;;;6956:19;;;;;6948:28;;;;;;6987:15;;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7034:31;;;;;;;;;;;;;;;;;6824:248;;;:::o;5208:256::-;5295:16;;;;;5287:25;;;;;;5341:15;;;:9;:15;;;;;;;;;;;:26;;5361:5;5341:26;:19;:26;:::i;:::-;5323:15;;;;:9;:15;;;;;;;;;;;:44;;;;5393:13;;;;;;;:24;;5411:5;5393:24;:17;:24;:::i;:::-;5377:13;;;;:9;:13;;;;;;;;;;;;:40;;;;5432:25;;;;;;;5377:13;;5432:25;;;;;;;;;;;;;5208:256;;;:::o;409:145:6:-;467:7;494:6;;;;486:15;;;;;;-1:-1:-1;523:5:6;;;409:145::o;560:::-;618:7;649:5;;;672:6;;;;664:15;;;;;1963:137:3;2024:4;2040:32;2050:10;2062:2;2066:5;2040:9;:32::i",
  "source": "pragma solidity ^0.5.2;\n\nimport \"../oz/ERC20.sol\";\n\ncontract Token is ERC20 {\n    bool transfersEnabled = true;\n    bool transfersReturningFalse = false;\n\n    constructor(uint256 supply) public {\n        _mint(msg.sender, supply);\n    }\n\n    function updateTransfersEnabled(bool enabled) external {\n        transfersEnabled = enabled;\n    }\n\n    function updateTransfersReturningFalse(bool enabled) external {\n        transfersReturningFalse = enabled;\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        if (transfersReturningFalse) {\n            return false;\n        }\n        require(transfersEnabled);\n        return super.transfer(to, value);\n    }\n}\n",
  "sourcePath": "/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/tokens/Token.sol",
  "ast": {
    "absolutePath": "/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        3899
      ]
    },
    "id": 3900,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3832,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 3833,
        "nodeType": "ImportDirective",
        "scope": 3900,
        "sourceUnit": 3114,
        "src": "25:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3834,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3113,
              "src": "70:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3113",
                "typeString": "contract ERC20"
              }
            },
            "id": 3835,
            "nodeType": "InheritanceSpecifier",
            "src": "70:5:9"
          }
        ],
        "contractDependencies": [
          3113,
          3182
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3899,
        "linearizedBaseContracts": [
          3899,
          3113,
          3182
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3838,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3899,
            "src": "82:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3836,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "82:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 3837,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "106:4:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3841,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 3899,
            "src": "116:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3839,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "116:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 3840,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "147:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "194:42:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3847,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3914,
                          "src": "210:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "210:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3849,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3843,
                        "src": "222:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3846,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3002,
                      "src": "204:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "204:25:9"
                }
              ]
            },
            "documentation": null,
            "id": 3853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3843,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "171:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:16:9"
            },
            "returnParameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:9"
            },
            "scope": 3899,
            "src": "159:77:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3862,
              "nodeType": "Block",
              "src": "297:43:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3858,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "307:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3859,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3855,
                      "src": "326:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "307:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3861,
                  "nodeType": "ExpressionStatement",
                  "src": "307:26:9"
                }
              ]
            },
            "documentation": null,
            "id": 3863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "274:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:14:9"
            },
            "returnParameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:9"
            },
            "scope": 3899,
            "src": "242:98:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3872,
              "nodeType": "Block",
              "src": "408:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3868,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3841,
                      "src": "418:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3869,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "444:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3871,
                  "nodeType": "ExpressionStatement",
                  "src": "418:33:9"
                }
              ]
            },
            "documentation": null,
            "id": 3873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3865,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3873,
                  "src": "385:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:9"
            },
            "returnParameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:9"
            },
            "scope": 3899,
            "src": "346:112:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3897,
              "nodeType": "Block",
              "src": "531:159:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3882,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3841,
                    "src": "545:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3886,
                  "nodeType": "IfStatement",
                  "src": "541:66:9",
                  "trueBody": {
                    "id": 3885,
                    "nodeType": "Block",
                    "src": "570:37:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "591:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3881,
                        "id": 3884,
                        "nodeType": "Return",
                        "src": "584:12:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3888,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3838,
                        "src": "624:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3917,
                        3918
                      ],
                      "referencedDeclaration": 3917,
                      "src": "616:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3890,
                  "nodeType": "ExpressionStatement",
                  "src": "616:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3893,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3875,
                        "src": "673:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3894,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3877,
                        "src": "677:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3891,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3953,
                        "src": "658:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$3899",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 3892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2806,
                      "src": "658:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3881,
                  "id": 3896,
                  "nodeType": "Return",
                  "src": "651:32:9"
                }
              ]
            },
            "documentation": null,
            "id": 3898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3875,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "482:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3877,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "494:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:27:9"
            },
            "returnParameters": {
              "id": 3881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "525:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3879,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:6:9"
            },
            "scope": 3899,
            "src": "464:226:9",
            "stateMutability": "nonpayable",
            "superFunction": 2806,
            "visibility": "public"
          }
        ],
        "scope": 3900,
        "src": "52:640:9"
      }
    ],
    "src": "0:693:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        3899
      ]
    },
    "id": 3900,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3832,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/woz/glowup/molochV2/git/moloch-subgraph/contracts/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 3833,
        "nodeType": "ImportDirective",
        "scope": 3900,
        "sourceUnit": 3114,
        "src": "25:25:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3834,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3113,
              "src": "70:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3113",
                "typeString": "contract ERC20"
              }
            },
            "id": 3835,
            "nodeType": "InheritanceSpecifier",
            "src": "70:5:9"
          }
        ],
        "contractDependencies": [
          3113,
          3182
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3899,
        "linearizedBaseContracts": [
          3899,
          3113,
          3182
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3838,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3899,
            "src": "82:28:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3836,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "82:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 3837,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "106:4:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3841,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 3899,
            "src": "116:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3839,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "116:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 3840,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "147:5:9",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "194:42:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3847,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3914,
                          "src": "210:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "210:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3849,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3843,
                        "src": "222:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3846,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3002,
                      "src": "204:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "204:25:9"
                }
              ]
            },
            "documentation": null,
            "id": 3853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3843,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "171:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:16:9"
            },
            "returnParameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:9"
            },
            "scope": 3899,
            "src": "159:77:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3862,
              "nodeType": "Block",
              "src": "297:43:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3858,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "307:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3859,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3855,
                      "src": "326:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "307:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3861,
                  "nodeType": "ExpressionStatement",
                  "src": "307:26:9"
                }
              ]
            },
            "documentation": null,
            "id": 3863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3863,
                  "src": "274:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:14:9"
            },
            "returnParameters": {
              "id": 3857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:9"
            },
            "scope": 3899,
            "src": "242:98:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3872,
              "nodeType": "Block",
              "src": "408:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3868,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3841,
                      "src": "418:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3869,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "444:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3871,
                  "nodeType": "ExpressionStatement",
                  "src": "418:33:9"
                }
              ]
            },
            "documentation": null,
            "id": 3873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3865,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3873,
                  "src": "385:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:9"
            },
            "returnParameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:9"
            },
            "scope": 3899,
            "src": "346:112:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3897,
              "nodeType": "Block",
              "src": "531:159:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3882,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3841,
                    "src": "545:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3886,
                  "nodeType": "IfStatement",
                  "src": "541:66:9",
                  "trueBody": {
                    "id": 3885,
                    "nodeType": "Block",
                    "src": "570:37:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "591:5:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3881,
                        "id": 3884,
                        "nodeType": "Return",
                        "src": "584:12:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3888,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3838,
                        "src": "624:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3917,
                        3918
                      ],
                      "referencedDeclaration": 3917,
                      "src": "616:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3890,
                  "nodeType": "ExpressionStatement",
                  "src": "616:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3893,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3875,
                        "src": "673:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3894,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3877,
                        "src": "677:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3891,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3953,
                        "src": "658:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$3899",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 3892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2806,
                      "src": "658:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3881,
                  "id": 3896,
                  "nodeType": "Return",
                  "src": "651:32:9"
                }
              ]
            },
            "documentation": null,
            "id": 3898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3875,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "482:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3877,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "494:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:27:9"
            },
            "returnParameters": {
              "id": 3881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3880,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "525:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3879,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:6:9"
            },
            "scope": 3899,
            "src": "464:226:9",
            "stateMutability": "nonpayable",
            "superFunction": 2806,
            "visibility": "public"
          }
        ],
        "scope": 3900,
        "src": "52:640:9"
      }
    ],
    "src": "0:693:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {
    "1581320797965": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x87E040855406082428A77308b79c157f53A425f2",
      "transactionHash": "0x30b7582b94837a02bc35b14a5842db0db76de26b67d748da0b8ff408868ee5f5"
    },
    "1581339406575": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x87E040855406082428A77308b79c157f53A425f2",
      "transactionHash": "0x30b7582b94837a02bc35b14a5842db0db76de26b67d748da0b8ff408868ee5f5"
    },
    "1581339579164": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD7a6663ca312026FD5Ce144f67E8a9Fc56fb9a65",
      "transactionHash": "0xaa704bf5b9f245e7f6798f42c158aafcb2453de03d68c75c5be57152331d7dcf"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-10T12:59:52.894Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}